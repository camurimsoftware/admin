'use client'
import Head from "next/head";
import Link from "next/link";

import Logo from "../../public/logo.svg";

import { api } from "~/utils/api";
import ReactToPrint from "react-to-print";
import { useRef, useState } from "react";
import { checklistItems1, checklistItems2 } from "./checkin";
import { FaSpinner } from "react-icons/fa";

const PDFFile = ({ name, guest, signatureUrl }: { name: string; guest: string; signatureUrl: string; }) => {
  return <div className="h-[1123px] bg-white flex flex-col items-center py-14 px-24">
    <p className="text-base self-start">{name}</p>
    {guest && <p className="text-base self-start">{guest}</p>}
    <div className="mt-6 space-y-2">
      {[...checklistItems1, ...checklistItems2].map(item =>
        <p key={item} className="text-sm">{item.replace(/\*\*/gi, "")}</p>
      )}
    </div>
    <img className="mt-8" src={signatureUrl} />
    <img src="./logo-dark.svg" className="w-[234px] mt-auto" />
  </div>
}

const TableResult = ({ document }: { document: string }) => {
  const printerRef = useRef<HTMLDivElement | null>(null);
  const { data, isLoading } = api.user.getUser.useQuery({ document });

  if (isLoading) {
    return <FaSpinner className="ml-2 h-6 w-6 animate-spin text-white" />
  }

  if (!data) {
    return <p className="text-xl">Nenhum resultado encontrado</p>
  }

  return <>
    <table className="w-full max-w-2xl lg:max-w-5xl table-fixed">
      <tbody>
        <tr className="text-xl">
          <td>
            {data.name}
          </td>
          <td className="w-20">
            {data.roomNumber}
          </td>
          <td>
            {data.startDate ? new Intl.DateTimeFormat('pt-BR').format(new Date(data.startDate)) : ""}
          </td>
          <td>
            {data.endDate ? new Intl.DateTimeFormat('pt-BR').format(new Date(data.endDate)) : ""}
          </td>
          <td className="text-right">
            <ReactToPrint
              trigger={() => <button className="py-4 px-8 bg-primary text-white text-xl rounded-3xl">Imprimir</button>}
              content={() => printerRef.current}
            />
          </td>
        </tr>
      </tbody>
    </table>
    <div className="hidden">
      <div ref={printerRef}>
        <PDFFile name={data.name!} guest={data.guest!} signatureUrl={data.signatureUrl!} />
      </div>
    </div>
  </>
}

export default function Home() {

  const [searchValue, setSearchValue] = useState("")
  const inputRef = useRef<HTMLInputElement | null>(null);

  return (
    <>
      <Head>
        <title>Camurim</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-between bg-white py-10 lg:py-40">
        <div className="w-full flex items-center gap-8 justify-between flex-col lg:flex-row max-w-5xl">
          <Link href="/checkin">
            <button className="py-4 px-12 bg-primary text-white text-4xl rounded-3xl">Iniciar checkin</button>
          </Link>
          <div className="flex flex-col lg:flex-row lg:items-center gap-2 lg:gap-8">
            <input
              ref={inputRef}
              type="number"
              placeholder="Digite o CPF (apenas nÃºmeros)"
              className="bg-[#d9d9d9] rounded-3xl text-xl py-8 px-2 min-w-[350px] placeholder-zinc-500"
            />
            <button
              onClick={() => {
                setSearchValue(inputRef?.current?.value ?? "")
                if (inputRef.current) {
                  inputRef.current.value = ""
                }
              }}
              className="py-4 px-12 bg-primary text-white text-4xl rounded-3xl"
            >
              Buscar
            </button>
          </div>
        </div>
        {searchValue && <TableResult document={searchValue} />}
        <div className="mt-10">
          <img src="./logo-dark.svg" className="w-[400px]" />
        </div>
      </main>
    </>
  );
}
